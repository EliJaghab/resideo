name: Token Status Check

on:
  schedule:
    - cron: '45 1,3,5,7,9,11 * * *'  # 9:45pm, 11:45pm, 1:45am, 3:45am, 5:45am, 7:45am ET (matches thermostat schedule)
  workflow_dispatch:

permissions:
  contents: write

jobs:
  refresh-token:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: pip install requests python-dotenv pytz

    - name: Create environment file
      env:
        CONSUMER_KEY: ${{ secrets.RESIDEO_CONSUMER_KEY }}
        HONEYWELL_USERNAME: ${{ secrets.HONEYWELL_USERNAME }}
        HONEYWELL_PASSWORD: ${{ secrets.HONEYWELL_PASSWORD }}
        HONEYWELL_TOTP_SECRET: ${{ secrets.HONEYWELL_TOTP_SECRET }}
        CURRENT_TOKEN: ${{ secrets.HONEYWELL_ACCESS_TOKEN }}
      run: |
        echo "RESIDEO_CONSUMER_KEY=$CONSUMER_KEY" >> .env.dev
        echo "HONEYWELL_USERNAME=$HONEYWELL_USERNAME" >> .env.dev
        echo "HONEYWELL_PASSWORD=$HONEYWELL_PASSWORD" >> .env.dev
        echo "HONEYWELL_TOTP_SECRET=$HONEYWELL_TOTP_SECRET" >> .env.dev
        echo "HONEYWELL_ACCESS_TOKEN=$CURRENT_TOKEN" >> .env.dev

    - name: Check token and log status
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_ACTIONS: true
      run: |
        python3 -c "
        import os
        import requests
        from datetime import datetime
        import pytz
        from dotenv import load_dotenv

        def log_entry(message):
            et = pytz.timezone('US/Eastern')
            timestamp = datetime.now(et).strftime('%m/%d/%y %H:%M:%S ET')
            entry = f'{timestamp}: {message}'
            with open('thermostat_log.txt', 'a') as f:
                f.write(entry + '\n')
            print(entry)

        load_dotenv('.env.dev')

        current_token = os.getenv('HONEYWELL_ACCESS_TOKEN')
        api_key = os.getenv('RESIDEO_CONSUMER_KEY')

        # Test current token
        if current_token:
            response = requests.get(
                f'https://api.honeywellhome.com/v2/devices/thermostats/LCC-00D02DB89E33?apikey={api_key}&locationId=146016',
                headers={'Authorization': f'Bearer {current_token}'}
            )

            if response.ok:
                log_entry('‚úÖ Token check: Current token is valid')
            else:
                log_entry('‚ö†Ô∏è  Token check: Current token expired - manual refresh needed')
                log_entry('üìã To refresh: python generate_token_batch.py')
        else:
            log_entry('‚ùå No token found in secrets')
        "

    - name: Commit token status log
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add thermostat_log.txt
        git commit -m "Token status check $(date '+%m/%d/%y %H:%M:%S')

        ü§ñ Generated with [Claude Code](https://claude.ai/code)

        Co-Authored-By: Claude <noreply@anthropic.com>" || exit 0
        git push